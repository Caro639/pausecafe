{% extends 'base.html.twig' %}

{% block title %}PauseCafé{% endblock %}

{% block body %}
<section class="py-5">
<div class="container px-4 px-lg-5 mt-5">
  <div class="row">

    <h2 class="mb-4">Payez votre commande</h2>
{# 
<div data-controller="order_paiement" data-action="onchange->order_paiement#connect">
  <div id="order_paiement" onchange="function(event)">
    </div>
</div> #}
     <!-- Display a payment form -->
   <form id="payment-form">
    <div id="card-element">
        <!-- Stripe.js injectera ici les champs de paiement -->
    </div>
    <div id="card-errors" role="alert"></div>
    <button type="submit" class="btn btn-dark mb-4">Payer</button>
</form>
</section>
{% endblock %}

 {% block javascripts %}
<script src="https://js.stripe.com/v3/"></script>
{# <script>
const clientSecret = "{{ clientSecret }}";
const stripe = Stripe("{{STRIPE_PUBLISHABLE_KEY}}");
const redirectAfterSuccessUrl = "{{ url('app_orders_detail', { id: order.id }) }}";
</script>
<script src="./controllers/scripts.js"></script> #}

<script>
document.addEventListener("DOMContentLoaded", function () {
    const clientSecret = "{{ clientSecret }}";

    // This is your test publishable API key.
    const stripe = Stripe(
   "pk_test_51NsjDZKAwtwLScn28yr6BJfzodjJG3Z5LL24KicPnd6MhaEHieL95A0AdyDTHLVU7lrurpXOS8ECZUZYeojzYe9J00IpsGHrQM"
    );
    console.log("Stripe", stripe);
    console.log("ClientSecret:", clientSecret);
    // Retrieve the PaymentIntent from the server
    stripe
      .retrievePaymentIntent(clientSecret)
      .then(function (result) {
        const paymentIntent = result.paymentIntent;
        console.log("paymentIntent:", paymentIntent);
      });

    const elements = stripe.elements();

    const card = elements.create("card", {
        style: {
            base: {
                iconColor: "#c4f0ff",
                color: "#000",
                fontWeight: "500",
                fontFamily: "Roboto, Open Sans, Segoe UI, sans-serif",
                fontSize: "16px",
                fontSmoothing: "antialiased",
                ":-webkit-autofill": { color: "#fce883" },
                "::placeholder": { color: "#87BBFD" },
            },
            invalid: {
                iconColor: "#FFC7EE",
                color: "#FFC7EE",
            },
        },
    });

    card.mount("#card-element");

    document.addEventListener("DOMContentLoaded", function () {
    console.log("Card Element:", document.getElementById("card-element"));
});

    card.on("change", function (event) {
        const button = document.querySelector("button");
        button.disabled = event.empty;
        const errorElement = document.getElementById("card-errors");
        errorElement.textContent = event.error ? event.error.message : "";
    });

    const form = document.getElementById("payment-form");

    form.addEventListener("submit", function (event) {
        event.preventDefault();

        stripe
            .confirmCardPayment(clientSecret, {
                payment_method: {
                    card: card,
                },
            })
            .then(function (result) {
                if (result.error) {
                    // Affichez l'erreur à l'utilisateur
                    const errorElement = document.getElementById("card-errors");
                    errorElement.textContent = result.error.message;
                } else {
                    // Le paiement a réussi
                    console.log("Paiement réussi :", result.paymentIntent.id);
                    window.location.href = "{{ url('app_orders_detail', { id: order.id }) }}"; // Redirigez vers une page de succès
                }
            });
    });
});
</script>
{% endblock %}
